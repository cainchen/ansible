# This Ansible play-book is used to test WordPress site deployment state.
---
- name: TEST 1 - Database
  hosts: '{{ hosts }}'
  remote_user: user1
  gather_facts: false
  vars:
    dbuser: USER
  tasks:
  - name: TEST 1 - Test to WordPress database.
    become: yes
    command:
      docker exec mysql mysql -uUSER -pPASSWORD -e 'use wordpress;select user_login from wp_users where user_login="{{dbuser}}"'
    register: dbresult
    ignore_errors: True
  - debug:
      msg: "{{ dbresult.stdout }}"
  - local_action:
      shell rm -f ./result.log && echo "Env:{{ hosts }}\nItem:Database\n\n===Result===\n{{ dbresult.stdout }}\n============" >> ./result.log
  - hosts: localhost
    local_action:
      shell echo "TEST 1 [PASSED] !!\n" >> ./result.log
    when: dbresult.stdout.find('{{dbuser}}') != -1
  - hosts: localhost
    local_action:
      shell echo "TEST 1 [FAILED] !!\n" >> ./result.log
    when: dbresult.stdout.find('{{dbuser}}') == -1
#
- name: TEST 2 - Website.
  hosts: localhost
  gather_facts: false
  vars:
    url: "http://{{ hosts }}-mysite.wordpress.net"
    keyword1: "{{ hosts }}"
  tasks:
  - name: TEST 2 - Test to WordPress website.
    local_action:
      shell curl --silent '{{url}}' | grep '{{keyword1}}' | head -n 1
    register: webresult
    ignore_errors: True
  - debug:
      msg: "{{ webresult.stdout }}"
  - local_action:
      shell echo "Item:Website\n\n===Result===\n{{ webresult.stdout }}\n============" >> ./result.log
  - local_action:
      shell echo "\nTEST 2 [PASSED] !!\n" >> ./result.log
    when: '"{{ hosts }}" in webresult.stdout'
  - local_action:
      shell echo "\nTEST 2 [FAILED] !!\n" >> ./result.log
    when: '"{{ hosts }}" not in webresult.stdout'
  - local_action:
      shell cat ./result.log
    register: result
  - debug:
      msg: "{{ result.stdout }}"
  - local_action:
      shell echo "** Test finally result is [PASSED] !!" >> ./result.log
    when: '"FAILED" not in result.stdout'
  - local_action:
      shell echo "** Test finally result is [FAILED] !!" >> ./result.log
    when: '"FAILED" in result.stdout'
